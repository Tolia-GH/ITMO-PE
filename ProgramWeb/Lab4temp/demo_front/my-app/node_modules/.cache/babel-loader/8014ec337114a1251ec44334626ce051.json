{"ast":null,"code":"var _jsxFileName = \"/Users/2398768715qq.com/Documents/GitHub/ITMO-PE/ProgramWeb/Lab4temp/demo_front/my-app/src/components/main/mainResult.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ResultTable extends Component {\n  constructor(props) {\n    super(props); // Get the array from sessionStorage and store it in component state\n\n    this.handleStorageChange = event => {\n      // Check if the event is for the sessionStorage key we're interested in\n      if (event.key === 'list') {\n        // Update the component state with the new array value\n        const array = JSON.parse(event.newValue) || [];\n        this.setState({\n          array\n        });\n      }\n    };\n\n    const _array = JSON.parse(sessionStorage.getItem('list')) || [];\n\n    this.state = {\n      array: _array\n    }; // Subscribe to sessionStorage change events\n\n    window.addEventListener('storage', this.handleStorageChange);\n  }\n\n  componentWillUnmount() {\n    // Unsubscribe from sessionStorage change events\n    window.removeEventListener('storage', this.handleStorageChange);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            width: 60,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: 60,\n            children: \"Y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: 60,\n            children: \"R\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: 60,\n            children: \"Hit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: 200,\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.state.array.map((ele, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            width: 60,\n            children: ele.x\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: 60,\n            children: ele.y\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: 60,\n            children: ele.r\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: 60,\n            children: ele.hit + \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: 200,\n            children: ele.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ResultTable;","map":{"version":3,"sources":["/Users/2398768715qq.com/Documents/GitHub/ITMO-PE/ProgramWeb/Lab4temp/demo_front/my-app/src/components/main/mainResult.jsx"],"names":["React","Component","ResultTable","constructor","props","handleStorageChange","event","key","array","JSON","parse","newValue","setState","sessionStorage","getItem","state","window","addEventListener","componentWillUnmount","removeEventListener","render","map","ele","x","y","r","hit","date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAChCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AAHe,SAgBnBC,mBAhBmB,GAgBIC,KAAD,IAAW;AAC7B;AACA,UAAIA,KAAK,CAACC,GAAN,KAAc,MAAlB,EAA0B;AACtB;AACA,cAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,QAAjB,KAA8B,EAA5C;AACA,aAAKC,QAAL,CAAc;AAAEJ,UAAAA;AAAF,SAAd;AACH;AACJ,KAvBkB;;AAIf,UAAMA,MAAK,GAAGC,IAAI,CAACC,KAAL,CAAWG,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,KAA8C,EAA5D;;AACA,SAAKC,KAAL,GAAa;AAAEP,MAAAA,KAAK,EAALA;AAAF,KAAb,CALe,CAOf;;AACAQ,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKZ,mBAAxC;AACH;;AAEDa,EAAAA,oBAAoB,GAAG;AACnB;AACAF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,SAA3B,EAAsC,KAAKd,mBAA3C;AACH;;AAWDe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,+BACA;AAAA,kCACI;AAAI,YAAA,KAAK,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,KAAK,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAI,YAAA,KAAK,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAI,YAAA,KAAK,EAAE,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA,kBACC,KAAKL,KAAL,CAAWP,KAAX,CAAiBa,GAAjB,CAAqB,CAACC,GAAD,EAAMf,GAAN,kBAClB;AAAA,kCACI;AAAI,YAAA,KAAK,EAAE,EAAX;AAAA,sBAAgBe,GAAG,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAE,EAAX;AAAA,sBAAgBD,GAAG,CAACE;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,KAAK,EAAE,EAAX;AAAA,sBAAgBF,GAAG,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAI,YAAA,KAAK,EAAE,EAAX;AAAA,sBAAgBH,GAAG,CAACI,GAAJ,GAAQ;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAI,YAAA,KAAK,EAAE,GAAX;AAAA,sBAAiBJ,GAAG,CAACK;AAArB;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,WAASpB,GAAT;AAAA;AAAA;AAAA;AAAA,gBADH;AADD;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH;;AAnD+B;;AAsDpC,eAAeL,WAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass ResultTable extends Component {\n    constructor(props) {\n        super(props);\n\n        // Get the array from sessionStorage and store it in component state\n        const array = JSON.parse(sessionStorage.getItem('list')) || [];\n        this.state = { array };\n\n        // Subscribe to sessionStorage change events\n        window.addEventListener('storage', this.handleStorageChange);\n    }\n\n    componentWillUnmount() {\n        // Unsubscribe from sessionStorage change events\n        window.removeEventListener('storage', this.handleStorageChange);\n    }\n\n    handleStorageChange = (event) => {\n        // Check if the event is for the sessionStorage key we're interested in\n        if (event.key === 'list') {\n            // Update the component state with the new array value\n            const array = JSON.parse(event.newValue) || [];\n            this.setState({ array });\n        }\n    }\n\n    render() {\n        return (\n            <table>\n                <thead>\n                <tr>\n                    <th width={60}>X</th>\n                    <th width={60}>Y</th>\n                    <th width={60}>R</th>\n                    <th width={60}>Hit</th>\n                    <th width={200}>Date</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.array.map((ele, key) => (\n                    <tr key={key}>\n                        <th width={60}>{ele.x}</th>\n                        <th width={60}>{ele.y}</th>\n                        <th width={60}>{ele.r}</th>\n                        <th width={60}>{ele.hit+\"\"}</th>\n                        <th width={200}>{ele.date}</th>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nexport default ResultTable;\n"]},"metadata":{},"sourceType":"module"}