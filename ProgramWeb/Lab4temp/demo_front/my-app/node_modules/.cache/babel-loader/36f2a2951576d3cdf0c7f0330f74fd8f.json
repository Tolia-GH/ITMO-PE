{"ast":null,"code":"var _jsxFileName = \"/Users/2398768715qq.com/Documents/GitHub/ITMO-PE/ProgramWeb/Lab4temp/demo_front/my-app/src/components/login/login.jsx\";\nimport React from \"react\";\nimport $ from 'jquery';\nimport { createBrowserHistory } from \"history\";\nimport PropTypes from 'prop-types';\nimport { addDot, clearDots, getPassword, getUsername } from \"../reduxStore/action/action\";\nimport { connect } from \"react-redux\";\nimport '../../assets/css/page_style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  render() {\n    const {\n      password,\n      username,\n      setPassword,\n      setUsername,\n      login,\n      toRegister\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header_col\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"fork_me\",\n          href: \"https://github.com/Tolia-GH/ITMO-PE\",\n          children: \"View on GitHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"web_title\",\n          children: \"Lab4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"web_author\",\n          children: \"P32131 \\u0427\\u0436\\u043E\\u0443 \\u0425\\u0443\\u043D\\u0441\\u044F\\u043D 13109\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_block\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"login_form\",\n          className: \"form-horizontal\",\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"var_label\",\n                children: \"Username:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form_input\",\n                type: \"text\",\n                value: username,\n                onChange: setUsername\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"var_label\",\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form_input\",\n                type: \"password\",\n                value: password,\n                onChange: setPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"buttons_set\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => login(username, password),\n                id: \"login\",\n                className: \"click_button\",\n                children: \"Log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toRegister(),\n                id: \"signup\",\n                className: \"click_button\",\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nLogin.propTypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  setPassword: PropTypes.func.isRequired,\n  setUsername: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  toRegister: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    username: state.dot.username,\n    password: state.dot.password\n  };\n}\n\nfunction sendAccount(username, password, dispatch) {\n  $.ajax({\n    url: \"api/main\",\n    method: \"POST\",\n    data: {\n      password: password,\n      username: username\n    },\n    async: false,\n    success: function (res) {\n      if (res.success) {\n        let listContent = \"\";\n        dispatch(clearDots());\n        res.dotList.map(ele => {\n          listContent = listContent + \"\\n\" + ele.x + \", \" + ele.y + \", \" + ele.r + \", \" + ele.hit + \", \" + ele.date;\n          dispatch(addDot(ele.x, ele.y + \"\", ele.r, ele.hit, ele.date));\n        });\n        alert(listContent);\n        window.sessionStorage.setItem(\"username\", username);\n        window.sessionStorage.setItem(\"password\", password);\n        const history = createBrowserHistory();\n        history.push('/main');\n      } else {\n        //dispatch(clearAccount());\n        alert(res.message);\n      }\n    }\n  });\n}\n\nfunction doDispatchToProps(dispatch) {\n  return {\n    setUsername: event => dispatch(getUsername(event.target.value)),\n    setPassword: event => dispatch(getPassword(event.target.value)),\n    login: (username, password) => {\n      sendAccount(username, password, dispatch);\n    },\n    toRegister: () => {\n      const history = createBrowserHistory();\n      history.push('/register');\n    }\n  };\n}\n\nexport const LoginPage = connect(mapStateToProps, doDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/2398768715qq.com/Documents/GitHub/ITMO-PE/ProgramWeb/Lab4temp/demo_front/my-app/src/components/login/login.jsx"],"names":["React","$","createBrowserHistory","PropTypes","addDot","clearDots","getPassword","getUsername","connect","Login","Component","render","password","username","setPassword","setUsername","login","toRegister","props","propTypes","string","isRequired","func","mapStateToProps","state","dot","sendAccount","dispatch","ajax","url","method","data","async","success","res","listContent","dotList","map","ele","x","y","r","hit","date","alert","window","sessionStorage","setItem","history","push","message","doDispatchToProps","event","target","value","LoginPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,oBAAR,QAAmC,SAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,WAAxC,QAA0D,6BAA1D;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,iCAAP;;;AAEA,MAAMC,KAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAoC;AAChCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,QAAD;AAAUC,MAAAA,QAAV;AAAmBC,MAAAA,WAAnB;AAA+BC,MAAAA,WAA/B;AAA2CC,MAAAA,KAA3C;AAAiDC,MAAAA;AAAjD,QAA6D,KAAKC,KAAxE;AACA,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE,YAAhB;AAAA,gCACI;AAAG,UAAA,EAAE,EAAE,SAAP;AAAkB,UAAA,IAAI,EAAE,qCAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAI,UAAA,EAAE,EAAE,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,EAAE,EAAE,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAE,YAAhB;AAAA,+BACI;AAAM,UAAA,EAAE,EAAE,YAAV;AAAwB,UAAA,SAAS,EAAE,iBAAnC;AAAA,iCACI;AAAU,YAAA,SAAS,EAAE,YAArB;AAAA,oCACI;AAAK,cAAA,SAAS,EAAE,YAAhB;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAE,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAO,gBAAA,SAAS,EAAE,YAAlB;AAAgC,gBAAA,IAAI,EAAC,MAArC;AAA4C,gBAAA,KAAK,EAAEL,QAAnD;AAA6D,gBAAA,QAAQ,EAAEE;AAAvE;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI;AAAK,cAAA,SAAS,EAAE,YAAhB;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAE,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAO,gBAAA,SAAS,EAAE,YAAlB;AAAgC,gBAAA,IAAI,EAAC,UAArC;AAAgD,gBAAA,KAAK,EAAEH,QAAvD;AAAiE,gBAAA,QAAQ,EAAEE;AAA3E;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAaI;AAAK,cAAA,EAAE,EAAE,aAAT;AAAA,sCACI;AAAQ,gBAAA,OAAO,EAAE,MAAIE,KAAK,CAACH,QAAD,EAAWD,QAAX,CAA1B;AAAgD,gBAAA,EAAE,EAAE,OAApD;AAA6D,gBAAA,SAAS,EAAE,cAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,gBAAA,OAAO,EAAE,MAAIK,UAAU,EAA/B;AAAmC,gBAAA,EAAE,EAAE,QAAvC;AAAiD,gBAAA,SAAS,EAAE,cAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiCH;;AApC+B;;AAsCpCR,KAAK,CAACU,SAAN,GAAgB;AACZN,EAAAA,QAAQ,EAACV,SAAS,CAACiB,MAAV,CAAiBC,UADd;AAEZT,EAAAA,QAAQ,EAACT,SAAS,CAACiB,MAAV,CAAiBC,UAFd;AAGZP,EAAAA,WAAW,EAACX,SAAS,CAACmB,IAAV,CAAeD,UAHf;AAIZN,EAAAA,WAAW,EAACZ,SAAS,CAACmB,IAAV,CAAeD,UAJf;AAKZL,EAAAA,KAAK,EAACb,SAAS,CAACmB,IAAV,CAAeD,UALT;AAMZJ,EAAAA,UAAU,EAACd,SAAS,CAACmB,IAAV,CAAeD;AANd,CAAhB;;AAQA,SAASE,eAAT,CAAyBC,KAAzB,EAA+B;AAC3B,SACI;AACIX,IAAAA,QAAQ,EAACW,KAAK,CAACC,GAAN,CAAUZ,QADvB;AAEID,IAAAA,QAAQ,EAACY,KAAK,CAACC,GAAN,CAAUb;AAFvB,GADJ;AAMH;;AACD,SAASc,WAAT,CAAqBb,QAArB,EAA8BD,QAA9B,EAAuCe,QAAvC,EAAgD;AAC5C1B,EAAAA,CAAC,CAAC2B,IAAF,CAAO;AACCC,IAAAA,GAAG,EAAE,UADN;AAECC,IAAAA,MAAM,EAAC,MAFR;AAGCC,IAAAA,IAAI,EAAC;AACDnB,MAAAA,QAAQ,EAAEA,QADT;AAEDC,MAAAA,QAAQ,EAAEA;AAFT,KAHN;AAOCmB,IAAAA,KAAK,EAAC,KAPP;AAQCC,IAAAA,OAAO,EAAC,UAAUC,GAAV,EAAc;AAClB,UAAGA,GAAG,CAACD,OAAP,EAAgB;AACZ,YAAIE,WAAW,GAAG,EAAlB;AACAR,QAAAA,QAAQ,CAACtB,SAAS,EAAV,CAAR;AACA6B,QAAAA,GAAG,CAACE,OAAJ,CAAYC,GAAZ,CAAiBC,GAAD,IAAS;AACrBH,UAAAA,WAAW,GAAGA,WAAW,GAAG,IAAd,GAAqBG,GAAG,CAACC,CAAzB,GAA6B,IAA7B,GAAoCD,GAAG,CAACE,CAAxC,GAA4C,IAA5C,GAAmDF,GAAG,CAACG,CAAvD,GAA2D,IAA3D,GAAkEH,GAAG,CAACI,GAAtE,GAA4E,IAA5E,GAAmFJ,GAAG,CAACK,IAArG;AACAhB,UAAAA,QAAQ,CAACvB,MAAM,CAACkC,GAAG,CAACC,CAAL,EAAOD,GAAG,CAACE,CAAJ,GAAM,EAAb,EAAgBF,GAAG,CAACG,CAApB,EAAsBH,GAAG,CAACI,GAA1B,EAA8BJ,GAAG,CAACK,IAAlC,CAAP,CAAR;AACH,SAHD;AAIAC,QAAAA,KAAK,CAACT,WAAD,CAAL;AAEAU,QAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,UAA9B,EAAyClC,QAAzC;AACAgC,QAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,UAA9B,EAAyCnC,QAAzC;AACA,cAAMoC,OAAO,GAAG9C,oBAAoB,EAApC;AACA8C,QAAAA,OAAO,CAACC,IAAR,CAAa,OAAb;AACH,OAbD,MAaM;AACF;AACAL,QAAAA,KAAK,CAACV,GAAG,CAACgB,OAAL,CAAL;AACH;AACJ;AA1BF,GAAP;AA6BH;;AACD,SAASC,iBAAT,CAA2BxB,QAA3B,EAAoC;AAChC,SAAO;AACHZ,IAAAA,WAAW,EAAEqC,KAAD,IAASzB,QAAQ,CAACpB,WAAW,CAAC6C,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ,CAD1B;AAEHxC,IAAAA,WAAW,EAAEsC,KAAD,IAASzB,QAAQ,CAACrB,WAAW,CAAC8C,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ,CAF1B;AAGHtC,IAAAA,KAAK,EAAC,CAACH,QAAD,EAAUD,QAAV,KAAqB;AACvBc,MAAAA,WAAW,CAACb,QAAD,EAAUD,QAAV,EAAmBe,QAAnB,CAAX;AACH,KALE;AAMHV,IAAAA,UAAU,EAAC,MAAI;AACX,YAAM+B,OAAO,GAAG9C,oBAAoB,EAApC;AACA8C,MAAAA,OAAO,CAACC,IAAR,CAAa,WAAb;AACH;AATE,GAAP;AAWH;;AACD,OAAO,MAAMM,SAAS,GAAG/C,OAAO,CAACe,eAAD,EAAiB4B,iBAAjB,CAAP,CAA2C1C,KAA3C,CAAlB","sourcesContent":["import React from \"react\";\nimport $ from 'jquery';\nimport {createBrowserHistory} from \"history\";\nimport PropTypes from 'prop-types';\nimport {addDot, clearDots, getPassword, getUsername} from \"../reduxStore/action/action\";\nimport {connect} from \"react-redux\";\nimport '../../assets/css/page_style.css';\n\nclass Login extends React.Component {\n    render() {\n        const {password,username,setPassword,setUsername,login,toRegister}=this.props;\n        return (\n            <div>\n                <div className={\"header_col\"}>\n                    <a id={\"fork_me\"} href={\"https://github.com/Tolia-GH/ITMO-PE\"}>\n                        View on GitHub\n                    </a>\n                    <h1 id={\"web_title\"}>Lab4</h1>\n                    <h2 id={\"web_author\"}>P32131 Чжоу Хунсян 13109</h2>\n                </div>\n                <div className={\"form_block\"}>\n                    <form id={\"login_form\"} className={\"form-horizontal\"}>\n                        <fieldset className={\"form-field\"}>\n                            <div className={\"form-group\"}>\n                                <label className={\"var_label\"}>\n                                    Username:\n                                </label>\n                                <input className={\"form_input\"} type=\"text\" value={username} onChange={setUsername}/>\n                            </div>\n                            <div className={\"form-group\"}>\n                                <label className={\"var_label\"}>\n                                    Password:\n                                </label>\n                                <input className={\"form_input\"} type=\"password\" value={password} onChange={setPassword}/>\n                            </div>\n                            <div id={\"buttons_set\"}>\n                                <button onClick={()=>login(username, password)} id={\"login\"} className={\"click_button\"}>Log in</button>\n                                <button onClick={()=>toRegister()} id={\"signup\"} className={\"click_button\"}>Sign up</button>\n                            </div>\n                        </fieldset>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\nLogin.propTypes={\n    username:PropTypes.string.isRequired,\n    password:PropTypes.string.isRequired,\n    setPassword:PropTypes.func.isRequired,\n    setUsername:PropTypes.func.isRequired,\n    login:PropTypes.func.isRequired,\n    toRegister:PropTypes.func.isRequired\n}\nfunction mapStateToProps(state){\n    return(\n        {\n            username:state.dot.username,\n            password:state.dot.password\n        }\n    )\n}\nfunction sendAccount(username,password,dispatch){\n    $.ajax({\n            url: \"api/main\",\n            method:\"POST\",\n            data:{\n                password: password,\n                username: username\n            },\n            async:false,\n            success:function (res){\n                if(res.success) {\n                    let listContent = \"\";\n                    dispatch(clearDots());\n                    res.dotList.map((ele) => {\n                        listContent = listContent + \"\\n\" + ele.x + \", \" + ele.y + \", \" + ele.r + \", \" + ele.hit + \", \" + ele.date;\n                        dispatch(addDot(ele.x,ele.y+\"\",ele.r,ele.hit,ele.date));\n                    })\n                    alert(listContent);\n\n                    window.sessionStorage.setItem(\"username\",username);\n                    window.sessionStorage.setItem(\"password\",password);\n                    const history = createBrowserHistory();\n                    history.push('/main');\n                }else {\n                    //dispatch(clearAccount());\n                    alert(res.message);\n                }\n            }\n        }\n    );\n}\nfunction doDispatchToProps(dispatch){\n    return({\n        setUsername:(event)=>dispatch(getUsername(event.target.value)),\n        setPassword:(event)=>dispatch(getPassword(event.target.value)),\n        login:(username,password)=>{\n            sendAccount(username,password,dispatch);\n        },\n        toRegister:()=>{\n            const history = createBrowserHistory();\n            history.push('/register');\n        }\n    })\n}\nexport const LoginPage = connect(mapStateToProps,doDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}